name: Publish to npm

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'packages/*/package.json'
      - '.changeset/*.md'
      - 'pnpm-lock.yaml'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    name: Publish to npm Registry
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build packages
        run: pnpm -r build

      - name: Check for changesets
        id: check-changesets
        run: |
          if [ -n "$(ls -A .changeset/*.md 2>/dev/null | grep -v README.md)" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          fi

      - name: Version packages
        if: steps.check-changesets.outputs.has_changesets == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          pnpm changeset version
          git add .
          git commit -m "chore: version packages [skip ci]" || echo "No changes to commit"
          git push

      - name: Publish to npm
        run: |
          # Check each package and publish if not already published
          for pkg in packages/*/package.json; do
            dir=$(dirname "$pkg")
            name=$(node -p "require('./$pkg').name")
            version=$(node -p "require('./$pkg').version")

            # Check if this version exists on npm
            if npm view "$name@$version" version 2>/dev/null; then
              echo "✓ $name@$version already exists on npm"
            else
              echo "→ Publishing $name@$version to npm..."
              cd "$dir"
              npm publish --access=public || echo "Failed to publish $name@$version"
              cd ../..
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

name: Publish to GitHub Packages

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Publish to npm"]
    types:
      - completed
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Pull latest changes
        run: git pull origin main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build packages
        run: pnpm -r build

      - name: Publish to GitHub Packages
        run: |
          echo "Syncing packages to GitHub Packages..."
          echo "@miermontoto:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc

          for pkg in packages/*/package.json; do
            dir=$(dirname "$pkg")
            name=$(node -p "require('./$pkg').name")
            version=$(node -p "require('./$pkg').version")

            # Check if this version exists in GitHub Packages
            if npm view "$name@$version" version --registry=https://npm.pkg.github.com 2>/dev/null; then
              echo "✓ $name@$version already exists in GitHub Packages"
            else
              echo "→ Publishing $name@$version to GitHub Packages..."
              cd "$dir"
              npm publish --registry=https://npm.pkg.github.com --access=public || true
              cd ../..
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
